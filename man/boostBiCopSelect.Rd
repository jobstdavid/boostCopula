% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boostBiCopSelect.R
\name{boostBiCopSelect}
\alias{boostBiCopSelect}
\title{Selection and Gradient-Boosted Estimation of GLMs for Conditional Bivariate Copulas}
\usage{
boostBiCopSelect(
  formula,
  U,
  X,
  familyset = NA,
  selectioncrit = "aic",
  indeptest = NA,
  control = boost_control(),
  na.action = na.omit,
  light = FALSE,
  cores = 1,
  ...
)
}
\arguments{
\item{formula}{an formula object, starting with the
\code{~} operator and followed by the covariates, which are separated by \code{+} operators.}

\item{U}{a matrix with two columns with values in [0,1].}

\item{X}{matrix containing the covariates and having the same number of rows as \code{U}.}

\item{familyset}{vector of bivariate copula families as described in \code{\link{boostBiCopEst}} to select from.
If \code{NA} (default), selection among all implemented copula families is performed.}

\item{selectioncrit}{character; either "\code{loglik}" or "\code{aic}" (default) for the copula family selection.}

\item{indeptest}{test for independence of both columns in \code{U}. Default: \code{NA}, i.e no independence check.
Otherwise, numeric value specifies significance level. The independence copula is chosen if the null hypothesis of independence cannot be rejected.}

\item{control}{control parameters for the gradient-boosting estimation.
The \code{\link{boost_control}} function provides the default setting.}

\item{na.action}{a function which indicates what should happen if the data contains \code{NA}s. Default: \code{na.omit}.}

\item{light}{logical; if \code{FALSE} (default) the model frame is kept in the \code{boostBiCop} object.
Otherwise, if \code{TRUE}, the model frame is omitted.}

\item{cores}{integer; the number of cores used for computations. Default: \code{cores = 1}.}

\item{...}{unused.}
}
\value{
An \code{boostBiCop} object.
}
\description{
Selection and gradient-boosted estimation of GLMs for conditional bivariate copulas.
}
\examples{
# load simulated data
data(data_bicop)

# fit object
object <- boostBiCopSelect(formula = ~.,
                           U = data_bicop[, 1:2],
                           X = data_bicop[, -c(1:2)],
                           familyset = NA,
                           control = boost_control(deselection = "attributable"))
summary(object)
plot(object)

}
