fit
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.2
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
grid()
tic()
fit <- boostBiCopSelect(formula = ~ X1+X2+X3+X4+X5,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
library(VineCopula)
library(boostCopulaext)
library(tictoc)
library(Rfast)
tau2par <- function(family, tau) {
if (family == 1) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-3), 1 - 1e-3)
out <- sin(pi/2*tau)
}
if (family %in% c(301:304)) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-7), 1 - 1e-7)
out <- 2*tau/(1 - abs(tau))
}
if (family %in% c(401:404)) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-7), 1 - 1e-7)
out <- sign(tau)/((1 - abs(tau)))
# correct if sign(tau) = 0
out[out == 0] <- 1
}
return(out)
}
getFams <- function(family) {
if (family == 1) {
fam <- 1
} else if (family %in% c(301:304)) {
fam <- as.numeric(rev(expand.grid(c(23, 33), c(3, 13)))[family - 300, ])
} else if (family %in% c(401:404)) {
fam <- as.numeric(rev(expand.grid(c(24, 34), c(4, 14)))[family - 400, ])
}
return(fam)
}
simDoubleCopulas <- function(N, family, f) {
N <- length(f)
tau <- tanh(f)
par <- tau2par(family, tau)
fam <- getFams(family)
family <- rep(fam[1], N)
if (length(fam) == 2) {
family[par < 0] <- fam[2]
}
out <- BiCopSim(N = N,
family = family,
par = par,
par2 = 0,
check.pars = FALSE)
return(out)
}
##################################################
tau2par <- function(family, tau) {
if (family == 1) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-3), 1 - 1e-3)
par <- sin(pi/2*tau)
}
if (family %in% c(301:304)) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-7), 1 - 1e-7)
par <- 2*tau/(1 - abs(tau))
# parameter needs to be greater 0
par[par == 0] <- 1e-7
}
if (family %in% c(401:404)) {
# correct to avoid problems with abs(tau) = 1
tau <- pmin(pmax(tau, -1 + 1e-7), 1 - 1e-7)
par <- sign(tau)/((1 - abs(tau)))
# correct if sign(tau) = 0
par[par == 0] <- 1
}
return(par)
}
getFams <- function(family) {
if (family == 1) {
fam <- 1
} else if (family %in% c(301:304)) {
fam <- as.numeric(rev(expand.grid(c(23, 33), c(3, 13)))[family - 300, ])
} else if (family %in% c(401:404)) {
fam <- as.numeric(rev(expand.grid(c(24, 34), c(4, 14)))[family - 400, ])
}
return(fam)
}
simDoubleCopulas <- function(N, family, f) {
N <- length(f)
tau <- tanh(f)
par <- tau2par(family, tau)
fam <- getFams(family)
family <- rep(fam[1], N)
if (length(fam) == 2) {
family[par < 0] <- fam[2]
}
out <- BiCopSim(N = N,
family = family,
par = par,
par2 = 0,
check.pars = FALSE)
return(out)
}
j <- sample(1:300, 1)
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
grid()
j <- sample(1:300, 1)
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
j <- sample(1:300, 1)
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
j <- sample(1:300, 1)
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
j <- sample(1:300, 1)
set.seed(j)
family <- 301
p <- 100
N <- 1000
# simulation
corr <- 0.8
mean_X <- rep(0, length = p)
sigma_X <- toeplitz(sapply(seq(0, p-1), function(x) corr^x))
X <- Rfast::rmvnorm(N, mean_X, sigma_X, j)
colnames(X) <- paste0("X", 1:p)
X <- as.data.frame(X)
lin_mod <- 0.1 - 0.2*X[, 1] + 0.3*X[, 2] + 0.2*X[, 3] + 0.5*X[, 4] - 0.4*X[, 5]
par <- tau2par(family, tanh(lin_mod))
hist(par)
set.seed(j)
U <- simDoubleCopulas(N, family, lin_mod)
# lin_mod <- 0.2 - 0.3*X[, 1] + 0.8*X[, 2] + 0.5*X[, 3] + 0.3*X[, 4] - 0.4*X[, 5]
# par <- link_fun(family, lin_mod)
# par2 <- 0
# hist(par, prob = T)
# summary(par)
# set.seed(j)
# U <- u <- as.data.frame(BiCopSim(N = N, family = family, par = par, par2 = par2, check.pars = F))
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = c(1, 301:304, 401:404),
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
grid()
View(fit)
fit[["paths"]][["loglik_path"]]
2.256229e-05
fit[["paths"]][["cov_path"]]
loglik(fit)
logLik(fit)
AIC(fit)
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = 404,
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = 403,
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = 402,
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = 401,
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
grid()
tic()
fit <- boostBiCopSelect(formula = ~ .,
U = U,
X = X,
familyset = 304,
selectioncrit = "loglik",
control = boost_control(maxit = 500,
mstop = "aic",
deselection = "attributable",
gamma = 0.01,
nu = 0.1,
center = T,
cores.control = 1),
na.action = na.omit,
light = F,
cores = 10)
toc()
fit
plot(fit, loglik = F)
grid()
View(fit)
