} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
mean(out)
out <- c()
j <- 1
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "logistic",
control = crch.control(hessian = NULL),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
mean(out)
out <- c()
j <- 1
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "logistic",
type = "crps",
control = crch.control(hessian = NULL),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
mean(out)
name
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "logistic",
type = "crps",
control = crch.control(hessian = NULL),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(hessian = NULL),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(hessian = F),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "Nelder-Mead"),
truncated = FALSE,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "Nelder-Mead"),
truncated = FALSE,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
k
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "Nelder-Mead", hessian = F),
truncated = FALSE,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = F),
truncated = FALSE,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
print(name[j])
mean(out)
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | log(forc.sd),
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = F),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = F),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
print(name[j])
mean(out)
out <- c()
j <- 3
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = F),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
print(name[j])
mean(out)
out <- c()
j <- 4
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = F),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
print(name[j])
mean(out)
out <- c()
j <- 4
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
# if (class(fit) == "try-error") {
#   out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
# } else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
# }
}
k
out <- c()
j <- 4
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 5
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
out <- c()
j <- 6
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out)
mean(out[out < 1000])
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out[out < 1000])
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean + forc.sd | forc.sd + forc.mean,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out[out < 1000])
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out[out < 1000])
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "student",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "logistic",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out[out < 1000])
out <- c()
j <- 2
for (k in 0:730) {
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
fit <- try({crch(obs ~ forc.mean | forc.sd,
data = train,
dist = "gaussian",
type = "crps",
control = crch.control(method = "BFGS", hessian = NULL),
truncated = FALSE,
na.action = na.omit,
left = 0)}, silent = T)
if (class(fit) == "try-error") {
out <- c(out, eppverification::crps(y = test$obs, x = matrix(as.numeric(test[, paste0("forc.", 1:50)]), ncol = 50), method = "ens"))
} else {
out <- c(out, as.numeric(predict(fit, newdata = test, type = "crps", at = test$obs)))
}
}
print(name[j])
mean(out[out < 1000])
out
hist(out)
# obtain training and testing data
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
hist(train$obs, probability = T)
moments::skewness(train$obs)
predict(fit, newdata = test, type = "parameter")
rcnorm(1000, as.numeric(predict(fit, newdata = test, type = "parameter")), left = 0)
moments::skewness(rcnorm(1000, as.numeric(predict(fit, newdata = test, type = "parameter")), left = 0))
data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
train
View(train)
0*Inf
k <- 34
train <- data[data$stationName == name[j] & data$date >= (as.Date("2010-01-01")+k) & data$date <= as.Date("2010-01-30")+k, vars]
test <- data[data$stationName == name[j] & data$date == as.Date("2010-01-31")+k, c(vars, paste0("forc.", 1:50))]
View(train)
